@model GTI_Mvc.ViewModels.RodoviariaViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Consulta uso da plataforma";
}

<style>

    .center {
        margin: auto;
        width: 800px;
    }

    .actionlink:hover {
        color: darkgreen;
    }

    .actionlink {
        color: darkslateblue;
    }

    .topics tr:hover {
        background-color: #f5f5f5;
    }

    .topics tr {
        height: 20px;
        font-size: 14px;
    }

    .modal-ku {
        width: 450px;
        margin: 200px, auto;
    }

    .card-header {
        background-color: mistyrose;
        color: brown;
        font-size: 14px
    }

    .card {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 14px;
    }

    .card-footer {
        background-color: whitesmoke;
        font-size: 14px
    }

    .btn-primary {
        background-color: steelblue;
    }

    .btn {
        font-size: 14px;
        border-radius: 4px;
    }

    .ui-dialog-titlebar-close {
        visibility: hidden;
    }



</style>

@{var res = @ViewBag.Error;}
<div class="center">
    @using(Html.BeginForm("Rod_plat_query","Plataforma",FormMethod.Post,new { @id = "MainForm",enctype = "multipart/form-data" })) {
        @Html.AntiForgeryToken()
        <div class="container" style="width:700px">
            <div class="card">
                <div class="card-header">

                    Consulta ao uso da plataforma
                    <label style="font-weight:normal;color:black;padding-left:200px">
                        Exercício:&nbsp;
                        @Html.DropDownListFor(m => m.Ano,ViewBag.ListaAno as SelectList,null,new { @id = "AnoDropDown" })
                    </label>  <br />
                    @Html.HiddenFor(m => m.Codigo,new { id = "Codigo" })
                    @Html.HiddenFor(m=>m.Nome)
                    <Label>Empresa:&nbsp;@Model.Codigo.ToString()&nbsp;-&nbsp;@Model.Nome</Label>

                </div>
                <div class="card-body">

                    <table id="tblMain" class="topics" style="font-size:14px;font-weight:normal;border-width:1px;border-style:None;border-collapse:collapse">
                        <thead style="background-color:brown;color:white;font-size:14px;font-weight:normal; white-space: nowrap;">
                            <tr>
                                <td style="width:85px;font-weight:normal;text-align:center">Período de</td>
                                <td style="width:85px;font-weight:normal;text-align:center">Período até</td>
                                <td style="width:45px;font-weight:normal;text-align:right">Qtde1</td>
                                <td style="width:45px;font-weight:normal;text-align:right">Qtde2</td>
                                <td style="width:45px;font-weight:normal;text-align:right">Qtde3</td>
                                <td style="width:80px;font-weight:normal;text-align:right;display:none">Valor Guia</td>
                                <td style="width:100px;font-weight:normal;text-align:center;display:none">Nº Guia</td>
                                <td style="width:100px;font-weight:normal;text-align:center;">dt.Vencto.</td>
                                <td style="width:100px;font-weight:normal;text-align:left">Situação</td>
                                <td style="display:none">Anexo</td>
                                <td style="width:80px">
                                </td>
                            </tr>
                        </thead>
                        <tbody id="tblComprador" class="topics" style="font-size:14px;font-weight:normal;border-width:1px;border-style:None;border-collapse:collapse;padding-left:10px;">
                            @foreach(var item in Model.Lista_uso_plataforma) {
                            <tr>
                                <td style="width:85px;font-weight:normal;text-align:center"> @Convert.ToDateTime(item.Datade).ToString("dd/MM/yyyy")</td>
                                <td style="width:85px;font-weight:normal;text-align:center"> @Convert.ToDateTime(item.Dataate).ToString("dd/MM/yyyy")</td>
                                <td style="width:45px;font-weight:normal;text-align:right">@Html.DisplayFor(modelItem => item.Qtde1)</td>
                                <td style="width:45px;font-weight:normal;text-align:right">@Html.DisplayFor(modelItem => item.Qtde2)</td>
                                <td style="width:45px;font-weight:normal;text-align:right">@Html.DisplayFor(modelItem => item.Qtde3)</td>
                                <td style="width:80px;font-weight:normal;text-align:right;display:none">@Html.DisplayFor(modelItem => item.Valor_Guia)</td>
                                <td style="width:100px;font-weight:normal;text-align:center;display:none">@Html.DisplayFor(modelItem => item.Numero_Guia)</td>
                                <td style="width:100px;font-weight:normal;text-align:center;">@item.Data_Vencimento.ToString("dd/MM/yyyy")</td>
                                <td style="width:100px;font-weight:normal;text-align:left">@Html.DisplayFor(modelItem => item.Situacao_Nome)</td>
                                <td style="display:none">@Html.DisplayFor(modelItem => item.Anexo)</td>
                                <td style="width:80px">
                                    @if (item.Situacao == 7) {
                                        <a href="@Url.Action("Rod_uso_plataforma_print", "Plataforma", new { p1 = item.Datade, p2 = item.Dataate, p3 = item.Seq, p4 = item.Codigo })" title="Imprimir a Guia" onclick="return confirm('Boletos liberados até as 16:30h podem ser quitados a partir do dia seguinte de sua liberação, após às 16:30h será necessário mais um dia útil para o registro. Você deseja emitir o boleto?')"> <img src="@Url.Content("~/images/print.png")"></a>
                                        <a href="@Url.Action("Rod_uso_plataforma_cancel", "Plataforma", new { p1 = item.Datade, p2 = item.Dataate, p3 = item.Seq, p4 = item.Codigo ,p5=item.Numero_Guia })" onclick="return confirm('Cancelar esta apuração?')" title="Cancelar Apuração"> <img src="@Url.Content("~/images/cancelar.gif")"></a>
                                    }
                                    @if (item.Anexo != null) {
                                        <a href="@Url.Action("Rod_uso_plataforma_anexo", "Plataforma", new { p1 = @Convert.ToDateTime(item.Datade).ToString("dd/MM/yyyy"), p2 = item.Anexo  })" title="Download do anexo"> <img src="@Url.Content("~/images/downarrow.gif")"></a>
                                    }
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                    <br />
                    <p style="font-weight:normal;font-size:12px;color:brown">
                        *Qtde 1 - Uso da plataforma até 39 km<br />
                        *Qtde 2 - Uso da plataforma de 40 km até 79,9 km<br />
                        *Qtde 3 - Uso da plataforma acima de 79,9 km
                    </p>
                </div>
                <div class="card-footer">
                    <a href="javascript:void(0);" class="actionlink" onclick="NewData();">Adicionar período de utilização da plataforma</a><br />
                    @Html.ActionLink("Retornar ao menu de opções","Rod_menu","Plataforma",null,new { @class = "actionlink" })<br />
                </div>
            </div>


        </div>

  

    <!-- Modal -->
    <div class="modal fade" id="GuiaModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-ku" role="document">
            <div class="modal-content" style="font-family: Arial, Helvetica, sans-serif;">
                <div class="modal-header">
                    <h4 class="modal-title">Adicionar período de utilização da plataforma</h4>
                </div>
                <div class="modal-body">
                    <table style="width:400px">
                        <tr>
                            <td style="width:200px;font-size:13px">
                                <label style="font-weight:normal">Data De:&nbsp;</label>
                                @Html.TextBoxFor(x => x.DataDe,"{0:dd/MM/yyyy}",new { @id = "DataDe",@style = "width:90px;",@onKeyPress = "return formata(this, '§§/§§/§§§§', event)",@data_picker = "date-picker",@Value = DateTime.Now.ToShortDateString() })
                            </td>
                            <td style="width:200px;font-size:13px">
                                <label style="font-weight:normal">Data Até:&nbsp;</label>
                                @Html.TextBoxFor(x => x.DataAte,"{0:dd/MM/yyyy}",new { @id = "DataAte",@style = "width:90px;",@onKeyPress = "return formata(this, '§§/§§/§§§§', event)",@data_picker = "date-picker",@Value = DateTime.Now.ToShortDateString() })
                            </td>
                        </tr>
                    </table>
                    <br />

                    <label style="font-size:14px;color:brown;padding-left:3px">Digite as quantidades por percurso</label>
                    <table style="width:260px;font-size:13px">
                        <tr>
                            <td style="width:180px;padding:3px">
                                <label style="font-weight:normal">Qtde até 39km:</label>
                            </td>
                            <td style="width:80px">
                                @Html.TextBoxFor(x => x.Qtde1,null,new { @id = "Qtde1",@style = "width:50px;",@onKeyPress = "return formata(this, '§§§§', event)",@Value = "" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:180px;padding:3px">
                                <label style="font-weight:normal">Qtde de 40km até 79,9km:</label>
                            </td>
                            <td style="width:80px">
                                @Html.TextBoxFor(x => x.Qtde2,null,new { @id = "Qtde2",@style = "width:50px;",@onKeyPress = "return formata(this, '§§§§', event)",@Value = "" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:180px;padding:3px">
                                <label style="font-weight:normal">Qtde acima de 79,9km:</label>
                            </td>
                            <td style="width:80px">
                                @Html.TextBoxFor(x => x.Qtde3,null,new { @id = "Qtde3",@style = "width:50px;",@onKeyPress = "return formata(this, '§§§§', event)",@Value = "" })
                            </td>
                        </tr>
                    </table>
                    <br />
                    <label style="font-size:14px;color:brown;padding-left:3px">Anexar arquivo</label>

                    <input style="width:610px;font-size:12px" type="file" name="files" id="files" accept="application/pdf" /><br /><br />

                    <article style="text-align:justify;font-weight:bold;font-size:13px">
                        Código Penal - Art.299:&nbsp;<span style="font-weight:normal"> É crime: Omitir, em documento público ou particular, declaração que dele devia constar, ou nele inserir ou fazer inserir declaração falsa ou diversa da que devia ser escrita, com o fim de prejudicar direito, criar obrigação ou alterar a verdade sobre fato juridicamente relevante.</span>
                    </article>

                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success" id="btnGuiaOk" onclick="return ValidateForm()"><i class="fas fa-save"></i>&nbsp;Gravar</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fas fa-ban"></i>&nbsp;Cancelar</button>
                </div>
            </div>
        </div>
    </div>
    }

</div>
<div id="msgBox1" title="Atenção" style='display: none;'>
    <br />
    <label id="lblMsg"></label>
</div>
<div id="msgBoxBag" title="Atenção" style='display: none;'>
    <br />
    <p>@ViewBag.Error</p>
</div>


@section scripts{

    <script type="text/javascript">
        $(document).ready(function () {

            $('*[data-picker="date-picker"]').datepicker({
                dateFormat: 'dd/mm/yy',
                dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                nextText: 'Próximo',
                prevText: 'Anterior'
            });
            $("#AnoDropDown").change(function () {
                if (this.value != '') {
                    $("#MainForm").submit();
                }
            });

            $('#msgBox1').dialog({
                autoOpen: false,
                resizable: false,
                draggable: false,
                position: { my: 'top', at: 'top+300' },
                height: "auto",
                width: 340,
                modal: true,
                dialogClass: "foo",
                buttons: {
                    "OK": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $('#msgBoxBag').dialog({
                autoOpen: false,
                resizable: false,
                draggable: false,
                position: { my: 'top', at: 'top+300' },
                height: "auto",
                width: 340,
                modal: true,
                dialogClass: "foo",
                buttons: {
                    "OK": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $(".ui-dialog").css({
                zIndex: '1060'
            });
            $(".foo .ui-dialog-title").css("font-size", "13px");
            $(".foo .ui-widget-content").css("font-size", "13px");

            var _res = '@res';
            if (_res != "") {
                $('#msgBoxBag').dialog('open');
                return false;
            } else {
                return true;
            }

        });

        function NewData() {
            $('#GuiaModal').modal();

        //    document.getElementById('errorGuia').innerHTML = "";
        }

        function ValidateForm() {
            var _data1 = document.getElementById('DataDe').value;
            if (!Valida_Data(_data1)) {
                document.getElementById('lblMsg').innerHTML = "Data inicial inválida";
                $('#msgBox1').dialog('open');
                return false;
            }
            var _data2 = document.getElementById('DataAte').value;
            if (!Valida_Data(_data2)) {
                document.getElementById('errorGuia').innerHTML = "Data final inválida";
                return false;
            }
            if (DataMaior(_data1, _data2)) {
                document.getElementById('lblMsg').innerHTML = "Data inicial maior que data final";
                $('#msgBox1').dialog('open');
                return false;
            }

            var a = document.getElementById('AnoDropDown').value;
            var d = parseInt(a);
            var d1 = RetornaAno(_data1);
            var d2 = RetornaAno(_data2);
            if (d1 != d || d2 != d) {
                document.getElementById('lblMsg').innerHTML = "Intervalo de datas fora do ano selecionado";
                $('#msgBox1').dialog('open');
                return false;
            }

            var table = document.getElementById("tblMain");
            var r = 0;
            while (row = table.rows[r++]) {
                var c = 0;
                var data1, data2;
                var status;
                while (cell = row.cells[c++]) {
                    if (r > 0) {
                        if (c == 1) {
                            data1 = cell.innerHTML;
                        }
                        if (c == 2) {
                            data2 = cell.innerHTML;
                            status = row.cells[7].innerHTML;
                            if (status != "Cancelado") {
                                if (DataIntervalo(_data1, data1, data2)) {
                                    document.getElementById('lblMsg').innerHTML = "Intervalo de datas já cadastrado";
                                    $('#msgBox1').dialog('open');
                                    return false;
                                }
                                if (DataIntervalo(_data2, data1, data2)) {
                                    document.getElementById('lblMsg').innerHTML = "Intervalo de datas já cadastrado";
                                    $('#msgBox1').dialog('open');
                                    return false;
                                }
                            }
                        }
                    }
                }
            }

            var _codigo = document.getElementById('Codigo').value;
            var _qtde1 = document.getElementById('Qtde1').value;
            var _qtde2 = document.getElementById('Qtde2').value;
            var _qtde3 = document.getElementById('Qtde3').value;

            var _bqtde1 = true;
            var _bqtde2 = true;
            var _bqtde3 = true;
            if (_qtde1 == "" || parseInt(_qtde1) == 0) {
                _qtde1 = "0";
                _bqtde1 = false;
            }
            if (_qtde2 == "" || parseInt(_qtde2) == 0) {
                _qtde2 = "0";
                _bqtde2 = false;
            }
            if (_qtde3 == "" || parseInt(_qtde3) == 0) {
                _qtde3 = "0";
                _bqtde3 = false;
            }
            if (!_bqtde1 && !_bqtde2 && !_bqtde3) {
                document.getElementById('lblMsg').innerHTML = "Nenhuma quantidade informada";
                $('#msgBox1').dialog('open');
                return false;
            }

            $('#GuiaModal').modal('hide');
            $("#MainForm").submit();
          //  sendForm(_data1, _data2, _qtde1, _qtde2, _qtde3, _codigo);
            return true;
        }

        //function sendForm(_dataDe, _dataAte, _qtde1, _qtde2, _qtde3, _codigo) {
        //    var _origem = location.origin;
        //    var _newurl = "/Plataforma/Rod_plat_query";
        //    if (_origem.indexOf("sistemas") > -1) {
        //        _newurl = "/gti/Plataforma/Rod_plat_query";
        //    }
        //    $.ajax({
        //        type: "Post",
        //        url: _newurl,
        //        dataType: 'json',
        //        data: {
        //            DataDe: _dataDe,
        //            DataAte: _dataAte,
        //            Qtde1: _qtde1,
        //            Qtde2: _qtde2,
        //            Qtde3: _qtde3,
        //            Codigo: _codigo
        //        },
        //        success: function (response, data) {
        //            alert(response.responseText);
        //            window.location.reload();
        //        },
        //        error: function (response) {
        //            alert("Ocorreu um erro!");
        //        }
        //    });


    

       // };

        function Valida_Data(data) {
            if (data == "") {
                return false;
            }
            var patternValidaData = /^(((0[1-9]|[12][0-9]|3[01])([-.\/])(0[13578]|10|12)([-.\/])(\d{4}))|(([0][1-9]|[12][0-9]|30)([-.\/])(0[469]|11)([-.\/])(\d{4}))|((0[1-9]|1[0-9]|2[0-8])([-.\/])(02)([-.\/])(\d{4}))|((29)(\.|-|\/)(02)([-.\/])([02468][048]00))|((29)([-.\/])(02)([-.\/])([13579][26]00))|((29)([-.\/])(02)([-.\/])([0-9][0-9][0][48]))|((29)([-.\/])(02)([-.\/])([0-9][0-9][2468][048]))|((29)([-.\/])(02)([-.\/])([0-9][0-9][13579][26])))$/;
            if (!patternValidaData.test(data)) {
                return false;
            }
            return true;
        }

        function DataMaior(date1, date2) {
            let parts1 = date1.split('/')
            let parts2 = date2.split('/')

            date1 = new Date(parts1[2], parts1[1] - 1, parts1[0]).getTime()
            date2 = new Date(parts2[2], parts2[1] - 1, parts2[0]).getTime()

            return date1 > date2 ? true : false
        }

        function DataMenor(date1, date2) {
            let parts1 = date1.split('/')
            let parts2 = date2.split('/')

            date1 = new Date(parts1[2], parts1[1] - 1, parts1[0]).getTime()
            date2 = new Date(parts2[2], parts2[1] - 1, parts2[0]).getTime()

            return date1 < date2 ? true : false
        }

        function DataIgual(date1, date2) {
            let parts1 = date1.split('/')
            let parts2 = date2.split('/')

            date1 = new Date(parts1[2], parts1[1] - 1, parts1[0]).getTime()
            date2 = new Date(parts2[2], parts2[1] - 1, parts2[0]).getTime()

            return date1 == date2 ? true : false
        }

        function DataIntervalo(date, date1, date2) {
            var retorno = false;

            let parts = date.split('/')
            let parts1 = date1.split('/')
            let parts2 = date2.split('/')

            date = new Date(parts[2], parts[1] - 1, parts[0]).getTime()
            date1 = new Date(parts1[2], parts1[1] - 1, parts1[0]).getTime()
            date2 = new Date(parts2[2], parts2[1] - 1, parts2[0]).getTime()

            if (date >= date1 && date <= date2) {
                return true;
            } else {
                return false;
            }
        }

        function RetornaAno(date) {
            let parts = date.split('/')
            date = new Date(parts[2], parts[1] - 1, parts[0]).getTime()
            var d = new Date(date)
            var n = d.getFullYear()
            return n
        }


    </script>
}
