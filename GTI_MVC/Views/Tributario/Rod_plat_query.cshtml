@model GTI_Mvc.ViewModels.RodoviariaViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Consulta uso da plataforma";
}

<style>

    .center {
        margin: auto;
        width: 800px;
    }

    .actionlink:hover {
        color: darkgreen;
    }

    .actionlink {
        color: darkslateblue;
    }

    .topics tr:hover {
        background-color: #f5f5f5;
    }

    .topics tr {
        height: 20px;
        font-size: 14px;
    }

    .modal-ku {
        width: 450px;
        margin: 200px, auto;
    }
    
</style>

<div class="center">

    @using (Html.BeginForm("Rod_plat_query", "Tributario", FormMethod.Post, new { @id = "MainForm" })) {
        <div class="container" style="width:700px">
            <div class="panel panel-danger">
                <div class="panel-heading">

                    Consulta ao uso da plataforma
                    <label style="font-weight:normal;color:black;padding-left:200px">
                        Exercício:&nbsp;
                        @Html.DropDownListFor(m => m.Ano, new List<SelectListItem> { new SelectListItem { Text = "2020", Value = "2020" } }, null, new { @id = "AnoDropDown" })
                    </label>  <br />
                    <Label>Empresa:&nbsp;@Model.Codigo.ToString()&nbsp;-&nbsp;@Model.Nome</Label>

                </div>
                <div class="panel-body">

                    <table id="tblMain" class="topics" style="font-size:14px;font-weight:normal;border-width:1px;border-style:None;border-collapse:collapse">
                        <thead style="background-color:brown;color:white;font-size:14px;font-weight:normal; white-space: nowrap;">
                            <tr>
                                <td style="width:85px;font-weight:normal;text-align:center">Período de</td>
                                <td style="width:85px;font-weight:normal;text-align:center">Período até</td>
                                <td style="width:45px;font-weight:normal;text-align:right">Qtde1</td>
                                <td style="width:45px;font-weight:normal;text-align:right">Qtde2</td>
                                <td style="width:45px;font-weight:normal;text-align:right">Qtde3</td>
                                <td style="width:80px;font-weight:normal;text-align:right">Valor Guia</td>
                                <td style="width:100px;font-weight:normal;text-align:center">Nº Guia</td>
                                <td style="width:100px;font-weight:normal;text-align:left">Situação</td>
                                <td style="width:80px">
                                </td>
                            </tr>
                        </thead>
                        <tbody id="tblComprador" class="topics" style="font-size:14px;font-weight:normal;border-width:1px;border-style:None;border-collapse:collapse;padding-left:10px;">
                            @foreach (var item in Model.Lista_uso_plataforma) {
                                <tr>
                                    <td style="width:85px;font-weight:normal;text-align:center"> @Convert.ToDateTime(item.Datade).ToString("dd/MM/yyyy")</td>
                                    <td style="width:85px;font-weight:normal;text-align:center"> @Convert.ToDateTime(item.Dataate).ToString("dd/MM/yyyy")</td>
                                    <td style="width:45px;font-weight:normal;text-align:right">@Html.DisplayFor(modelItem => item.Qtde1)</td>
                                    <td style="width:45px;font-weight:normal;text-align:right">@Html.DisplayFor(modelItem => item.Qtde2)</td>
                                    <td style="width:45px;font-weight:normal;text-align:right">@Html.DisplayFor(modelItem => item.Qtde3)</td>
                                    <td style="width:80px;font-weight:normal;text-align:right">@Html.DisplayFor(modelItem => item.Valor_Guia)</td>
                                    <td style="width:100px;font-weight:normal;text-align:center">@Html.DisplayFor(modelItem => item.Numero_Guia)</td>
                                    <td style="width:100px;font-weight:normal;text-align:left">@Html.DisplayFor(modelItem => item.Situacao_Nome)</td>
                                    <td style="width:80px">
                                        <a href="@Url.Action("Notificacao_print","Tributario", new { p1 = item.Datade,p2=item.Dataate,p3=item.Seq })" title="Imprimir a Guia"> <img src="@Url.Content("~/images/print.png")"></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <br />
                    <p style="font-weight:normal;font-size:12px;color:brown">
                        *Qtde 1 - Uso da palateforma até 39 km<br />
                        *Qtde 2 - Uso da palateforma de 40 km até 79,9 km<br />
                        *Qtde 3 - Uso da palateforma acima de 79,9 km
                    </p>
                </div>
                <div class="panel-footer">
                    <a style="cursor:pointer" onclick="NewData()">Adicionar período de utilização da plataforma</a><br />
                    @Html.ActionLink("Retornar ao menu de opções", "Rod_menu", "Tributario", null, new { @class = "actionlink" })<br />

                </div>
            </div>
      

        </div>
    }


    <!-- Modal -->
    <div  class="modal fade" id="GuiaModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-ku" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Adicionar período de utilização da plataforma</h4>
                </div>
                <div class="modal-body">
                    <table style="width:400px">
                        <tr>
                            <td style="width:200px;font-size:13px">
                                <label style="font-weight:normal">Data De:&nbsp;</label>
                                @Html.TextBoxFor(x => x.DataDe, "{0:dd/MM/yyyy}", new { @id="datadeTxt", @style = "width:90px;", @data_picker = "date-picker", @Value = DateTime.Now.ToShortDateString() })
                            </td>
                            <td style="width:200px;font-size:13px">
                                <label style="font-weight:normal">Data Até:&nbsp;</label>
                                @Html.TextBoxFor(x => x.DataAte, "{0:dd/MM/yyyy}", new { @id = "dataateTxt", @style = "width:90px;", @data_picker = "date-picker", @Value = DateTime.Now.ToShortDateString() })
                            </td>
                        </tr>
                    </table>
                    <br />

                    <label style="font-size:14px;color:brown;padding-left:3px">Digite as quantidades por percurso</label>
                    <table style="width:260px;font-size:13px">
                        <tr>
                            <td style="width:180px;padding:3px">
                                <label style="font-weight:normal">Qtde até 39km:</label>
                            </td>
                            <td style="width:80px">
                                @Html.TextBoxFor(x => x.Qtde1, null, new { @style = "width:50px;", @onKeyPress = "return formata(this, '§§§§', event)" ,@Value=""})
                            </td>
                        </tr>
                        <tr>
                            <td style="width:180px;padding:3px">
                                <label style="font-weight:normal">Qtde de 40km até 79,9km:</label>
                            </td>
                            <td style="width:80px">
                                @Html.TextBoxFor(x => x.Qtde2, null, new { @style = "width:50px;", @onKeyPress = "return formata(this, '§§§§', event)", @Value = "" })
                            </td>
                        </tr>
                        <tr>
                            <td style="width:180px;padding:3px">
                                <label style="font-weight:normal">Qtde acima de 79,9km:</label>
                            </td>
                            <td style="width:80px">
                                @Html.TextBoxFor(x => x.Qtde3, null, new { @style = "width:50px;", @onKeyPress = "return formata(this, '§§§§', event)", @Value = "" })
                            </td>
                        </tr>
                    </table>

                    <label style="font-weight:normal;color:red;padding-left:7px" id="errorGuia">@ViewBag.Error</label>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="btnGuiaOk" onclick="return ValidateForm()">Incluir</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                </div>
            </div>
        </div>
    </div>


</div>

@section scripts{

    <script type="text/javascript">
        $(document).ready(function () {

            $('*[data-picker="date-picker"]').datepicker({
                dateFormat: 'dd/mm/yy',
                dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                nextText: 'Próximo',
                prevText: 'Anterior'
            });
            $("#AnoDropDown").change(function () {
                if (this.value != '') {
                    $("#MainForm").submit();
                }
            });

        });

        function NewData() {
            $('#GuiaModal').modal();
            document.getElementById('errorGuia').innerHTML = "";
        }

        function ValidateForm() {
            ClearError();
            var _data1 = document.getElementById('datadeTxt').value;
            if (!Valida_Data(_data1)) {
                document.getElementById('errorGuia').innerHTML = "Data inicial inválida";
                return false;
            }
            var _data2 = document.getElementById('dataateTxt').value;
            if (!Valida_Data(_data1)) {
                document.getElementById('errorGuia').innerHTML = "Data final inválida";
                return false;
            }
            if (DataMaior(_data1, _data2)) {
                document.getElementById('errorGuia').innerHTML = "Data inicial maior que data final";
                return false;
            }

            var a = document.getElementById('AnoDropDown').value;
            var d = parseInt(a);
            var d1 = RetornaAno(_data1);
            var d2 = RetornaAno(_data2);
            if (d1 != d || d2 != d) {
                document.getElementById('errorGuia').innerHTML = "Intervalo de datas fora do ano selecionado";
                return false;
            }


            var table = document.getElementById("tblMain");
            var r = 0; //start counting rows in table
            while (row = table.rows[r++]) {
                var c = 0; //start counting columns in row
                var data1, data2;
                while (cell = row.cells[c++]) {
                    if (r > 0) {
                        if (c == 1) {
                            data1 = cell.innerHTML;
                        } 
                        if (c == 2) {
                            data2 = cell.innerHTML;
                            if (DataIntervalo(_data1, data1, data2)) {
                                document.getElementById('errorGuia').innerHTML = "Intervalo de datas já cadastrado";
                                return false;
                            }
                            if (DataIntervalo(_data2, data1, data2)) {
                                document.getElementById('errorGuia').innerHTML = "Intervalo de datas já cadastrado";
                                return false;
                            }
                        }
                    }

                }
            }

            return true;
        }

        function Valida_Data(data) {
            if (data == "") {
                return false;
            }
            var patternValidaData = /^(((0[1-9]|[12][0-9]|3[01])([-.\/])(0[13578]|10|12)([-.\/])(\d{4}))|(([0][1-9]|[12][0-9]|30)([-.\/])(0[469]|11)([-.\/])(\d{4}))|((0[1-9]|1[0-9]|2[0-8])([-.\/])(02)([-.\/])(\d{4}))|((29)(\.|-|\/)(02)([-.\/])([02468][048]00))|((29)([-.\/])(02)([-.\/])([13579][26]00))|((29)([-.\/])(02)([-.\/])([0-9][0-9][0][48]))|((29)([-.\/])(02)([-.\/])([0-9][0-9][2468][048]))|((29)([-.\/])(02)([-.\/])([0-9][0-9][13579][26])))$/;
            if (!patternValidaData.test(data)) {
                return false;
            }
            return true;
        }

        function ClearError() {
            document.getElementById('errorGuia').innerHTML = "";
        }


    </script>
}
