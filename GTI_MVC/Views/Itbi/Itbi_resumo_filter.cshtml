@model GTI_Mvc.ViewModels.Itbi_Relatorio

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Análise de ITBI's";
}

<style>

    .center {
        margin: auto;
    }

    .actionlink:hover {
        color: darkgreen;
    }

    .actionlink {
        color: darkslateblue;
    }

    .card-header {
        background-color: mistyrose;
        color: brown;
        font-size: 14px
    }

    .card {
        font-family: Arial, Helvetica, sans-serif;
    }

    .card-footer {
        background-color: whitesmoke;
        font-size: 14px
    }

    .btn-primary {
        background-color: steelblue;
    }

    .btn {
        font-size: 14px;
        border-radius: 4px;
    }

    .errorlabel {
        font-weight: normal;
        color: red;
        padding-left: 13px;
        font-size: 13px;
        font-family: Arial, Helvetica, sans-serif;
    }

    .ui-dialog-titlebar-close {
        visibility: hidden;
    }
</style>

@{var res = @ViewBag.Error;}

<div class="center">
    <br />
    <div class="container" style="width:860px">
        <div class="card" style="width:600px">
            <div class="card-header">Filtro do Relatório </div>
            <div class="card-body" ></div>
            @using (Html.BeginForm("Itbi_resumo_filter", "Itbi", FormMethod.Post, new { @id = "MainForm" })) {
                @Html.AntiForgeryToken()
                <table style="width:600px;text-align:center">
                    <tr>
                        <td style="width:150px;font-size:13px">
                            <label style="font-weight:normal">Data De:&nbsp;</label>
                            @Html.TextBoxFor(x => x.Data_Inicio, "{0:dd/MM/yyyy}", new { @id = "DataDe", @style = "width:90px;", @onKeyPress = "return formata(this, '§§/§§/§§§§', event)" })
                        </td>
                        <td style="width:150px;font-size:13px">
                            <label style="font-weight:normal">Data Até:&nbsp;</label>
                            @Html.TextBoxFor(x => x.Data_Final, "{0:dd/MM/yyyy}", new { @id = "DataAte", @style = "width:90px;", @onKeyPress = "return formata(this, '§§/§§/§§§§', event)" })
                        </td>
                        <td style="width:200px;font-size:13px">
                            <label style="font-weight:normal">Situação:&nbsp;</label>
                            @Html.DropDownListFor(m => Model.Situacao_Id, ViewBag.ListaStatus as SelectList, null, new { @id = "StatusDropDown", @style = "font-weight:normal;" })<br />

                        </td>
                    </tr>
                </table>
            }
            <div style="text-align:center">
                <button type="submit" class="btn btn-primary" onclick="return ValidateForm()">Imprimir</button>&nbsp;&nbsp;
            </div>
            <br />
            <div class="card-footer">
                @Html.ActionLink("Preencher outro ITBI", "Itbi_Menu", "Itbi", null, new { @class = "actionlink" })<br />
                @Html.ActionLink("Retornar ao menu principal", "Login_gti", "Home", null, new { @class = "actionlink" })
            </div>

        </div>
    </div>
</div>

<div id="msgBox1" title="Atenção" style='display: none;'>
    <br />
    <label id="lblMsg"></label>
</div>
<div id="msgBoxBag" title="Atenção" style='display: none;'>
    <br />
    <p>@ViewBag.Error</p>
</div>



@section scripts{

    <script type="text/javascript">
        $(document).ready(function () {

            $('*[data-picker="date-picker"]').datepicker({
                dateFormat: 'dd/mm/yy',
                dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                nextText: 'Próximo',
                prevText: 'Anterior'
            });


            $('#msgBox1').dialog({
                autoOpen: false,
                resizable: false,
                draggable: false,
                position: { my: 'top', at: 'top+300' },
                height: "auto",
                width: 340,
                modal: true,
                dialogClass: "foo",
                buttons: {
                    "OK": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $('#msgBoxBag').dialog({
                autoOpen: false,
                resizable: false,
                draggable: false,
                position: { my: 'top', at: 'top+300' },
                height: "auto",
                width: 340,
                modal: true,
                dialogClass: "foo",
                buttons: {
                    "OK": function () {
                        $(this).dialog("close");
                    }
                }
            });

            $(".ui-dialog").css({
                zIndex: '1060'
            });
            $(".foo .ui-dialog-title").css("font-size", "13px");
            $(".foo .ui-widget-content").css("font-size", "13px");

            var _res = '@res';
            if (_res != "") {
                $('#msgBoxBag').dialog('open');
                return false;
            } else {
                return true;
            }

        });


        function ValidateForm() {
            var _data1 = document.getElementById('DataDe').value;
            if (!Valida_Data(_data1)) {
                document.getElementById('lblMsg').innerHTML = "Data inicial inválida";
                $('#msgBox1').dialog('open');
                return false;
            }
            var _data2 = document.getElementById('DataAte').value;
            if (!Valida_Data(_data2)) {
                document.getElementById('lblMsg').innerHTML = "Data final inválida";
                $('#msgBox1').dialog('open');
                return false;
            }
            if (DataMaior(_data1, _data2)) {
                document.getElementById('lblMsg').innerHTML = "Data inicial maior que data final";
                $('#msgBox1').dialog('open');
                return false;
            }
            $("#MainForm").submit();
            return true;
        }



        function Valida_Data(data) {
            if (data == "") {
                return false;
            }
            var patternValidaData = /^(((0[1-9]|[12][0-9]|3[01])([-.\/])(0[13578]|10|12)([-.\/])(\d{4}))|(([0][1-9]|[12][0-9]|30)([-.\/])(0[469]|11)([-.\/])(\d{4}))|((0[1-9]|1[0-9]|2[0-8])([-.\/])(02)([-.\/])(\d{4}))|((29)(\.|-|\/)(02)([-.\/])([02468][048]00))|((29)([-.\/])(02)([-.\/])([13579][26]00))|((29)([-.\/])(02)([-.\/])([0-9][0-9][0][48]))|((29)([-.\/])(02)([-.\/])([0-9][0-9][2468][048]))|((29)([-.\/])(02)([-.\/])([0-9][0-9][13579][26])))$/;
            if (!patternValidaData.test(data)) {
                return false;
            }
            return true;
        }

        function DataMaior(date1, date2) {
            let parts1 = date1.split('/')
            let parts2 = date2.split('/')

            date1 = new Date(parts1[2], parts1[1] - 1, parts1[0]).getTime()
            date2 = new Date(parts2[2], parts2[1] - 1, parts2[0]).getTime()

            return date1 > date2 ? true : false
        }

        function DataMenor(date1, date2) {
            let parts1 = date1.split('/')
            let parts2 = date2.split('/')

            date1 = new Date(parts1[2], parts1[1] - 1, parts1[0]).getTime()
            date2 = new Date(parts2[2], parts2[1] - 1, parts2[0]).getTime()

            return date1 < date2 ? true : false
        }

        function DataIgual(date1, date2) {
            let parts1 = date1.split('/')
            let parts2 = date2.split('/')

            date1 = new Date(parts1[2], parts1[1] - 1, parts1[0]).getTime()
            date2 = new Date(parts2[2], parts2[1] - 1, parts2[0]).getTime()

            return date1 == date2 ? true : false
        }

        function DataIntervalo(date, date1, date2) {
            var retorno = false;

            let parts = date.split('/')
            let parts1 = date1.split('/')
            let parts2 = date2.split('/')

            date = new Date(parts[2], parts[1] - 1, parts[0]).getTime()
            date1 = new Date(parts1[2], parts1[1] - 1, parts1[0]).getTime()
            date2 = new Date(parts2[2], parts2[1] - 1, parts2[0]).getTime()

            if (date >= date1 && date <= date2) {
                return true;
            } else {
                return false;
            }
        }

        function RetornaAno(date) {
            let parts = date.split('/')
            date = new Date(parts[2], parts[1] - 1, parts[0]).getTime()
            var d = new Date(date)
            var n = d.getFullYear()
            return n
        }


    </script>
}
